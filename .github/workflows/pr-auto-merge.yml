name: PR auto merge
on:
  workflow_dispatch:

jobs:
  label:
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: master

      - name: check pull requests
        id: pr
        run: |
          #depfuラベルが付いたPRだけを抽出しつつ、必要な情報を取得する
          query=`cat << EOS
          map(select(.labels | any(.[];.name == "depfu"))) |
          map(select(.labels | all(.[];.name != "レビュー待ち"))) |
          map(select(.labels | all(.[];.name != "WIP"))) |
          map(
            {
              url: .url,
              branch: .headRefName,
              base: .baseRefName,
              title: .title,
              mergeable: (.mergeable == "MERGEABLE"),
              status: (.statusCheckRollup[] | select(. | .name == "frontend test"))
            }
          )
          EOS
          `
          targets=$(gh pr list --json labels,url,title,baseRefName,headRefName,statusCheckRollup,mergeable --jq "${query}")
          echo "targets:${targets}"
          # auto merge
          merged='[]'
          unmerged='[]'
          IFS=$'\n';for t in $(echo $targets | jq -c '.[]'); do
            echo "t:${t}"
            mergeable=$(echo $t | jq '(.mergeable and .status.conclusion == "SUCCESS")')
            echo "mergeable:${mergeable}"
            param=$(echo $t | jq '{ title: .title, value: .url }')
            echo "param:${param}"
            if [ mergeable = true ]; then
              gh pr merge ${b} --merge
              merged=$(echo ${merged} | jq ". |= .+[${param}]")
            else
              unmerged=$(echo ${unmerged} | jq ". |= .+[${param}]")
            fi
          done
          
          # slack notification(auto merged)
          slack_merged=$(echo $merged | sed -r 's/"(title|value)"/\1/g')

          # slack notification(ci failed)
          slack_unmerged=$(echo $unmerged | sed -r 's/"(title|value)"/\1/g')

          echo "::set-output name=slack_merged::${slack_merged}"
          echo "::set-output name=slack_unmerged::${slack_unmerged}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: notify merged
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              username: 'depfu',
              channel: 'dev-stream',
              icon_emoji: ':kawauso:',
              attachments: [{
                color: 'good',
                title: 'cabernet AUTO MERGED',
                text: '自動マージできたもの（存在しない場合は空になります）',
                fields: ${{ steps.pr.outputs.slack_merged }}
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_STREAM }}

      - name: notify unmerged
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              username: 'depfu',
              channel: 'dev-stream',
              icon_emoji: ':kawauso:',
              attachments: [{
                color: 'danger',
                title: 'cabernet UNMERGED',
                text: '自動マージできなかったもの（存在しない場合は空になります）',
                fields: ${{ steps.pr.outputs.slack_unmerged }}
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_STREAM }}
